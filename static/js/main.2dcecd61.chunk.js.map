{"version":3,"sources":["components/Loader/Loader.tsx","api.ts","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","components/PageNavLink/PageNavLink.tsx","components/NavigationBar/NavigationBar.tsx","components/HomePage/HomePage.tsx","components/NotFoundPage/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["Loader","className","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","sex","slug","name","to","classNames","getParent","array","parentName","find","parent","PeopleTable","people","personId","useParams","map","born","died","fatherName","motherName","mother","father","PeoplePage","useState","setPeople","isLoading","setIsLoading","hasError","setHasError","useEffect","peopleFromServer","length","PageNavLink","title","isActive","NavigationBar","role","HomePage","NotFoundPage","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.2dcecd61.chunk.js","sourcesContent":["import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { sex, slug, name } = person;\n\n  return (\n    <Link\n      to={`/people/${slug}`}\n      className={classNames({ 'has-text-danger': sex === 'f' })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types/Person';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ntype Props = {\n  people: Person[];\n};\n\nconst getParent = (\n  array: Person[], parentName: string | null,\n): Person | null => {\n  return array.find(parent => parent.name === parentName) || null;\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { personId } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map((person) => {\n          const {\n            sex,\n            born,\n            died,\n            fatherName,\n            motherName,\n            slug,\n          } = person;\n\n          const mother = getParent(people, motherName);\n          const father = getParent(people, fatherName);\n\n          return (\n            <tr\n              data-cy=\"person\"\n              key={slug}\n              className={classNames({\n                'has-background-warning': slug === personId,\n              })}\n            >\n              <td>\n                <PersonLink person={person} />\n              </td>\n\n              <td>{sex}</td>\n              <td>{born}</td>\n              <td>{died}</td>\n\n              <td>\n                {mother ? (\n                  <PersonLink person={mother} />\n                ) : (\n                  motherName || '-'\n                )}\n              </td>\n\n              <td>\n                {father ? (\n                  <PersonLink person={father} />\n                ) : (\n                  fatherName || '-'\n                )}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Person } from '../../types/Person';\nimport { getPeople } from '../../api';\nimport { PeopleTable } from '../PeopleTable/PeopleTable';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        setIsLoading(true);\n        const peopleFromServer = await getPeople();\n\n        setPeople(peopleFromServer);\n      } catch {\n        setHasError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, []);\n\n  return (\n    <>\n      <div className=\"container\">\n        <h1 className=\"title\">People Page</h1>\n        <div className=\"block\">\n          <div className=\"box table-container\">\n            {isLoading\n              ? <Loader />\n              : (\n                <>\n                  {hasError && (\n                    <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                      Something went wrong\n                    </p>\n                  )}\n\n                  {people.length <= 0 && (\n                    <p data-cy=\"noPeopleMessage\">\n                      There are no people on the server\n                    </p>\n                  )}\n\n                  <PeopleTable people={people} />\n                </>\n              )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string;\n  title: string;\n};\n\nexport const PageNavLink: FC<Props> = ({ to, title }) => {\n  return (\n    <NavLink\n      className={({ isActive }) => classNames(\n        'navbar-item',\n        { 'has-background-grey-lighter': isActive },\n      )}\n      to={to}\n    >\n      {title}\n    </NavLink>\n  );\n};\n","import { PageNavLink } from '../PageNavLink/PageNavLink';\n\nexport const NavigationBar = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink title=\"Home\" to=\"/\" />\n        <PageNavLink title=\"People\" to=\"/people\" />\n      </div>\n    </div>\n  </nav>\n);\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\nimport { NavigationBar } from './components/NavigationBar/NavigationBar';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { NotFoundPage } from './components/NotFoundPage/NotFoundPage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n\n    <NavigationBar />\n    <main className=\"section\">\n\n      <Routes>\n        <Route path=\"/\" element={<HomePage />} />\n        <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"/people\">\n          <Route index element={<PeoplePage />} />\n          <Route path=\":personId\" element={<PeoplePage />} />\n        </Route>\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Routes>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}